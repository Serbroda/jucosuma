name: CI & Release

on:
  push:
    branches: ['**']             # build auf allen Branches
    tags: ['v*.*.*', 'v*.*.*-*'] # zusätzlich: Tag-Push triggert auch (für Release)
  pull_request:
    branches: ['**']             # build bei PRs

permissions:
  contents: write                # nötig für Releases

env:
  GO_VERSION: "1.24.x"
  TAR_OPTIONS: --skip-old-files

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # VERSION laden (aus Datei). Bei Tag-Run optional Konsistenz prüfen.
      - name: Read version from file
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
          if [ "${{ github.ref_type }}" = "tag" ]; then
            TAG="${GITHUB_REF_NAME#v}"
            if [ "$TAG" != "$VERSION" ]; then
              echo "::warning:: Tag (v$TAG) != VERSION-Datei ($VERSION)."
            fi
          fi

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate & build UI
        run: make generate-go build-ui

      - name: Run tests
        run: make test

      - name: Build platforms
        run: make build-server

      - name: Prepare release artifacts (binaries + checksums)
        run: |
          mkdir -p release
          cp bin/* release/
          (cd release && sha256sum * > checksums.txt)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jucosuma-${{ env.VERSION }}
          path: release/*

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version from file
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Download artifacts from build
        uses: actions/download-artifact@v4
        with:
          name: jucosuma-${{ env.VERSION }}
          path: release

      - name: Create GitHub Release (tag-driven)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            Automated release for ${{ github.ref_name }}.
            Includes:
            - All compiled binaries
            - SHA256 checksums
          files: |
            release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
